version: 2.1
orbs:
  aws-cli: circleci/aws-cli@4.0.0
workflows:
 version: 2
 test:
   jobs:
     - build:
        context: TEST
        bucket: 's3://test.go.eco/'
        bucket-de: 's3://de.test.go.eco/'
        bucket-fr: 's3://fr.test.go.eco/'
        filters:
          branches:
            only: master
 production:
   jobs:
     - build:
        context: PROD
        bucket: 's3://www.go.eco/'
        bucket-de: 's3://de.go.eco/'
        bucket-fr: 's3://fr.go.eco/'
        filters:
          branches:
            only: production
jobs:
  build:
    parameters:
      bucket:
        type: string
      bucket-de:
        type: string
      bucket-fr:
        type: string
    docker:
    # https://hub.docker.com/r/cimg/node
    - image: cimg/node:lts
    steps:
    - checkout

    # Build
    - run: sudo apt update
    - run: sudo apt-get install nasm
    - run: npm ci
    - run: npm run build
    - run: SITE_LANG=de npm run build
    - run: SITE_LANG=fr npm run build
    - run: npm run build:svg
    - run: npm run minify

    # Deployment
    - aws-cli/setup
    - run: aws s3 sync public << parameters.bucket >> --exclude "*.webp"
    - run: aws s3 sync public << parameters.bucket >> --include "*.webp" --content-type "image/webp"

    - run: aws s3 sync public-de << parameters.bucket-de >> --exclude "*.webp"
    - run: aws s3 sync public-de << parameters.bucket-de >> --include "*.webp" --content-type "image/webp"

    - run: aws s3 sync public-fr << parameters.bucket-fr >> --exclude "*.webp"
    - run: aws s3 sync public-fr << parameters.bucket-fr >> --include "*.webp" --content-type "image/webp"
